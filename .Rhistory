log2(0.0334684792)
log(0.0334684792)
log(0.0334684792)
?log
log10(0.0334684792)
logn(0.0334684792)
-1.5 + 3 + (-.5*5)
exp(-1)
log( 0.3678794)
log(1)
1- 0.3678794
0.3678794 / (1+0.3678794)
install.packages("haven")
devtools::install_github("hadley/haven")
install.packages("devtools")
devtools::install_github("hadley/haven")
yourData = read_dta("Downloads/CPR_Final_data_respondents_anonymized.dta")
devtools::install_github("hadley/haven")
install.packages("devtools")
install.packages("devtools")
install.packages("haven")
yourData = read_dta("Downloads/CPR_Final_data_respondents_anonymized.dta")
devtools::install_github("hadley/haven")
install.packages("haven")
devtools::install_github("hadley/haven")
yourData = read_dta("Downloads/CPR_Final_data_respondents_anonymized.dta")
devtools::install_github("hadley/haven")
data(state)
data("mtcars")
library("MASS")
?shuttle
library(ggplot2)
data(USArrests)
# Transform the USArrests data set to the required format
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
states <- map_data("state")  # map to the states
ggplot(crimes, aes(map_id = state, fill=Assault)) +
geom_map(map = states) +
expand_limits(x = states$long, y = states$lat) +
coord_map("polyconic")
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
data(USArrests)
# Transform the USArrests data set to the required format
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
states <- map_data("state")  # map to the states
ggplot(crimes, aes(map_id = state, fill=Assault)) +
geom_map(map = states) +
expand_limits(x = states$long, y = states$lat) +
coord_map("polyconic")
?map_data
install.packages( "maps")
library(ggplot2)
data(USArrests)
# Transform the USArrests data set to the required format
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
states <- map_data("state")  # map to the states
ggplot(crimes, aes(map_id = state, fill=Assault)) +
geom_map(map = states) +
expand_limits(x = states$long, y = states$lat) +
coord_map("polyconic")
install.packages("mapproj")
library(ggplot2)
data(USArrests)
# Transform the USArrests data set to the required format
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
states <- map_data("state")  # map to the states
ggplot(crimes, aes(map_id = state, fill=Assault)) +
geom_map(map = states) +
expand_limits(x = states$long, y = states$lat) +
coord_map("polyconic")
USAccDeaths
USArrests
USJudgeRatings
USPersonalExpenditure
USAccDeaths
USPersonalExpenditure
USJudgeRatings
USArrests
library(ggplot2)
data(USArrests)
# Transform the USArrests data set to the required format
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
states <- map_data("state")  # map to the states
ggplot(crimes, aes(map_id = state, fill=Rape)) +
geom_map(map = states) +
expand_limits(x = states$long, y = states$lat) +
coord_map("polyconic")
?USArrests
USArrests[,4]
USArrests[,c(1,4)]
USArrests[,c(4)]
USArrests[,4]
USArrests[1,4]
USArrests[,4]
usarrests <- USArrests[,4]
usarrests <- as.data.frame( USArrests[,4] )
usarrests
USArrests[,4 , drop=F]
setwd("Documents/R/KaggleWalmart/")
train <- read.csv("Data/train.csv")
summary(train)
View(train)
View(train)
train$Date <- as.Date(train$Date)
summary(train)
stores <- read.csv("Data/stores.csv")
merge(train , stores , by = "Store")
trainStoresMerge <- merge(train , stores , by = "Store")
summary(trainStoresMerge)
model <- lm( Weekly_Sales ~ . , data = train )
summary(model)
features <- read.csv("Data/features.csv")
summary(features)
summary(train)
table(train$Date)
features$Date <- as.Date(features$Date)
summary(features)
test <- read.csv("Data/test.csv")
summary(test)
test$Date <- as.Date( test$Date)
summary(test)
merge( trainStoresMerge , features , by = c( "Store" , "Date" );
merge( trainStoresMerge , features , by = c( "Store" , "Date" )
)
trainStoresFeatureMerge <- merge( trainStoresMerge , features , by = c( "Store" , "Date" ) )
summary(trainStoresFeatureMerge)
model <- lm( Weekly_Sales ~ . , data = trainStoresFeatureMerge )
summary(model)
download.file( "https://www.kaggle.com/c/walmart-recruiting-store-sales-forecasting/download/train.csv.zip" , destfile = train.zip )
download.file( "https://www.kaggle.com/c/walmart-recruiting-store-sales-forecasting/download/train.csv.zip" , destfile = "train.zip" )
download.file( "https://www.kaggle.com/c/walmart-recruiting-store-sales-forecasting/download/train.csv.zip" , destfile = "train.zip" , method = "curl")
download.file( "http://www.kaggle.com/c/walmart-recruiting-store-sales-forecasting/download/train.csv.zip" , destfile = "train.zip" , method = "curl")
tmp <- tempfile()
url <- "http://www.kaggle.com/c/walmart-recruiting-store-sales-forecasting/download/train.csv.zip"
download.file(url, destfile = tmp)
download.file(url, destfile = tmp, method = "curl")
View(features)
View(features)
remove(tmp)
remove(url)
?str.dendrogram
?str
as.Date('2010-02-05')
summary( as.Date('2010-02-05') )
as.Date('2010-02-05')
as.Date('2010-02-05')-as.Date('2012-10-26')
as.Date('2012-10-26')-as.Date('2010-02-05')
as.Date('2012-10-26')-as.Date('2010-02-05')/944
=as.Date('2012-10-26')-as.Date('2010-02-05')/944
(as.Date('2012-10-26')-as.Date('2010-02-05'))/944
(as.Date('2012-10-26')-as.Date('2010-02-05'))/7
(as.Date('2012-10-26')-as.Date('2010-02-05'))
as.Date('2010-02-05')
?Date
weekdays(as.Date('2010-02-05'))
(as.Date('2012-10-26')-as.Date('2010-02-05'))
as.numeric (as.Date('2012-10-26')-as.Date('2010-02-05')) )/7
as.numeric( as.Date('2012-10-26')-as.Date('2010-02-05')) /7
table( train$Store , train$Dept)
View(test)
unique( train[,c(1,2)])
t <- train[,c(1,2)]
unique(t)
?unique
unique(t$Store)
unique(t$Store,t$Dept)
unique(t$Dept)
45*99
unique(t)
plot(t$Store,t$Dept)
plot(t$Store,t$Dept)
table(t$Store~t$Dept)
table(t$Store,t$Dept)
table(t$Dept,t$Store)
rm(t)
storeDept <- train[,c(1,2)]
uniqueStoreDept <- unique(storeDept)
uniqueStoreDept
table(uniqueStoreDept$Store)
table(uniqueStoreDept$Dept)
hist(uniqueStoreDept$Store)
hist(uniqueStoreDept$Store,breaks = 45)
plot(uniqueStoreDept$Store,breaks = 45)
plot(uniqueStoreDept$Store)
warning()
plot(uniqueStoreDept$Store)
plot(uniqueStoreDept$Dept)
45*99
